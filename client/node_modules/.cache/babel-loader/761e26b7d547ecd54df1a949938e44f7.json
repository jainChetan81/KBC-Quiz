{"ast":null,"code":"var _jsxFileName = \"/media/chetan/New Volume1/Pdhai/Projects/kbc-quiz/src/views/Quiz.jsx\";\nimport React, { Component } from \"react\";\nimport questions from \"../data/questions\";\nimport { Link } from \"react-router-dom\";\nexport default class Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      qCount: 0,\n      ques: [...questions],\n      finished: false,\n      givenAns: [],\n      total: 0\n    };\n  }\n\n  previusButton() {\n    return React.createElement(\"button\", {\n      className: \"btn col-2 btn-danger py-3\",\n      onClick: e => {\n        e.preventDefault();\n        this.prev(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Prev\");\n  }\n\n  prev() {\n    const _this$state = this.state,\n          qCount = _this$state.qCount,\n          ques = _this$state.ques,\n          givenAns = _this$state.givenAns;\n    console.log(\"thie count in the prev bfunction is :\", qCun);\n\n    if (ques[qCount].ansCorrect && ques[qCount].ansCorrect === givenAns[qCount]) {\n      console.log(\"answered question  \", givenAns[qCount]);\n    }\n\n    if (qCount > 0) {\n      this.setState({\n        qCount: this.state.qCount - 1,\n        finished: false\n      });\n    }\n\n    if (qCount === 0) {\n      this.setState({\n        qCount: 0,\n        finished: true\n      });\n    }\n  }\n\n  click(given, answer) {\n    const qCount = this.state.qCount;\n    var joined = this.state.givenAns.concat(answer);\n    this.setState({\n      givenAns: joined\n    }); //to add ht e list of ques answered\n\n    if (given === answer) {\n      this.setState({\n        total: this.state.total + 1\n      });\n    }\n\n    if (qCount === 0) {\n      console.log(answer, qCount, \"qCount<1\");\n      this.setState({\n        qCount: qCount + 1\n      });\n    }\n\n    if (qCount === 2) {\n      console.log(answer, qCount, \"else\");\n      this.setState({\n        finished: true\n      });\n    }\n\n    console.log(\" qCount=====\", this.state.i);\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          qCount = _this$state2.qCount,\n          ques = _this$state2.ques,\n          finished = _this$state2.finished,\n          total = _this$state2.total;\n    var answered = true;\n    if (finished) return React.createElement(\"h1\", {\n      className: \"text-center m-5 text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success m-auto p-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Retry\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), \"Quiz is finished \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), \"Your answer being \", total);\n    return React.createElement(\"div\", {\n      className: \"container my-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-black text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.previusButton(), React.createElement(\"h2\", {\n      className: \"text-center m-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, ques[qCount].questionno)), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, ques[qCount].options.map(value => {\n      return React.createElement(\"button\", {\n        className: \"btn col btn-light m-1\",\n        key: value.key,\n        disabled: answered ? false : true,\n        onClick: () => {\n          this.click(value.key, ques[qCount].ansCorrect);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"lead p-auto text-dark mt-2 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, value.ques)));\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/media/chetan/New Volume1/Pdhai/Projects/kbc-quiz/src/views/Quiz.jsx"],"names":["React","Component","questions","Link","Quiz","state","qCount","ques","finished","givenAns","total","previusButton","e","preventDefault","prev","console","log","qCun","ansCorrect","setState","click","given","answer","joined","concat","i","render","answered","questionno","options","map","value","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,eAAe,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACxCI,KADwC,GAChC;AACJC,MAAAA,MAAM,EAAE,CADJ;AAEJC,MAAAA,IAAI,EAAE,CAAC,GAAGL,SAAJ,CAFF;AAGJM,MAAAA,QAAQ,EAAE,KAHN;AAIJC,MAAAA,QAAQ,EAAE,EAJN;AAKJC,MAAAA,KAAK,EAAE;AALH,KADgC;AAAA;;AAQxCC,EAAAA,aAAa,GAAG;AACZ,WACI;AACI,MAAA,SAAS,EAAC,2BADd;AAEI,MAAA,OAAO,EAAEC,CAAC,IAAI;AACVA,QAAAA,CAAC,CAACC,cAAF;AACA,aAAKC,IAAL,CAAU,IAAV;AACH,OALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAWH;;AACDA,EAAAA,IAAI,GAAG;AAAA,wBACgC,KAAKT,KADrC;AAAA,UACKC,MADL,eACKA,MADL;AAAA,UACaC,IADb,eACaA,IADb;AAAA,UACmBE,QADnB,eACmBA,QADnB;AAEHM,IAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAoDC,IAApD;;AACA,QACIV,IAAI,CAACD,MAAD,CAAJ,CAAaY,UAAb,IACAX,IAAI,CAACD,MAAD,CAAJ,CAAaY,UAAb,KAA4BT,QAAQ,CAACH,MAAD,CAFxC,EAGE;AACES,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCP,QAAQ,CAACH,MAAD,CAA3C;AACH;;AACD,QAAIA,MAAM,GAAG,CAAb,EAAgB;AACZ,WAAKa,QAAL,CAAc;AACVb,QAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,MAAX,GAAoB,CADlB;AAEVE,QAAAA,QAAQ,EAAE;AAFA,OAAd;AAIH;;AACD,QAAIF,MAAM,KAAK,CAAf,EAAkB;AACd,WAAKa,QAAL,CAAc;AACVb,QAAAA,MAAM,EAAE,CADE;AAEVE,QAAAA,QAAQ,EAAE;AAFA,OAAd;AAIH;AACJ;;AACDY,EAAAA,KAAK,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAAA,UACThB,MADS,GACE,KAAKD,KADP,CACTC,MADS;AAEjB,QAAIiB,MAAM,GAAG,KAAKlB,KAAL,CAAWI,QAAX,CAAoBe,MAApB,CAA2BF,MAA3B,CAAb;AACA,SAAKH,QAAL,CAAc;AAAEV,MAAAA,QAAQ,EAAEc;AAAZ,KAAd,EAHiB,CAGoB;;AACrC,QAAIF,KAAK,KAAKC,MAAd,EAAsB;AAClB,WAAKH,QAAL,CAAc;AACVT,QAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWK,KAAX,GAAmB;AADhB,OAAd;AAGH;;AACD,QAAIJ,MAAM,KAAK,CAAf,EAAkB;AACdS,MAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ,EAAoBhB,MAApB,EAA4B,UAA5B;AACA,WAAKa,QAAL,CAAc;AACVb,QAAAA,MAAM,EAAEA,MAAM,GAAG;AADP,OAAd;AAGH;;AACD,QAAIA,MAAM,KAAK,CAAf,EAAkB;AACdS,MAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ,EAAoBhB,MAApB,EAA4B,MAA5B;AACA,WAAKa,QAAL,CAAc;AACVX,QAAAA,QAAQ,EAAE;AADA,OAAd;AAGH;;AACDO,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKX,KAAL,CAAWoB,CAAvC;AACH;;AACDC,EAAAA,MAAM,GAAG;AAAA,yBACqC,KAAKrB,KAD1C;AAAA,UACGC,MADH,gBACGA,MADH;AAAA,UACWC,IADX,gBACWA,IADX;AAAA,UACiBC,QADjB,gBACiBA,QADjB;AAAA,UAC2BE,KAD3B,gBAC2BA,KAD3B;AAEL,QAAIiB,QAAQ,GAAG,IAAf;AAEA,QAAInB,QAAJ,EACI,OACI;AAAI,MAAA,SAAS,EAAC,8BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,+BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,uBAKqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALrB,wBAMuBE,KANvB,CADJ;AAUJ,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,aAAL,EADL,EAEI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,IAAI,CAACD,MAAD,CAAJ,CAAasB,UADlB,CAFJ,CADJ,EAOI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKrB,IAAI,CAACD,MAAD,CAAJ,CAAauB,OAAb,CAAqBC,GAArB,CAAyBC,KAAK,IAAI;AAC/B,aACI;AACI,QAAA,SAAS,EAAC,uBADd;AAEI,QAAA,GAAG,EAAEA,KAAK,CAACC,GAFf;AAGI,QAAA,QAAQ,EAAEL,QAAQ,GAAG,KAAH,GAAW,IAHjC;AAII,QAAA,OAAO,EAAE,MAAM;AACX,eAAKP,KAAL,CACIW,KAAK,CAACC,GADV,EAEIzB,IAAI,CAACD,MAAD,CAAJ,CAAaY,UAFjB;AAIH,SATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWI;AAAG,QAAA,SAAS,EAAC,wCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIa,KAAK,CAACxB,IAAV,CADJ,CAXJ,CADJ;AAiBH,KAlBA,CADL,CAPJ,CADJ,CADJ,CADJ;AAmCH;;AApHuC","sourcesContent":["import React, { Component } from \"react\";\r\nimport questions from \"../data/questions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Quiz extends Component {\r\n    state = {\r\n        qCount: 0,\r\n        ques: [...questions],\r\n        finished: false,\r\n        givenAns: [],\r\n        total: 0\r\n    };\r\n    previusButton() {\r\n        return (\r\n            <button\r\n                className=\"btn col-2 btn-danger py-3\"\r\n                onClick={e => {\r\n                    e.preventDefault();\r\n                    this.prev(true);\r\n                }}\r\n            >\r\n                Prev\r\n            </button>\r\n        );\r\n    }\r\n    prev() {\r\n        const { qCount, ques, givenAns } = this.state;\r\n        console.log(\"thie count in the prev bfunction is :\",qCun);\r\n        if (\r\n            ques[qCount].ansCorrect &&\r\n            ques[qCount].ansCorrect === givenAns[qCount]\r\n        ) {\r\n            console.log(\"answered question  \", givenAns[qCount]);\r\n        }\r\n        if (qCount > 0) {\r\n            this.setState({\r\n                qCount: this.state.qCount - 1,\r\n                finished: false\r\n            });\r\n        }\r\n        if (qCount === 0) {\r\n            this.setState({\r\n                qCount: 0,\r\n                finished: true\r\n            });\r\n        }\r\n    }\r\n    click(given, answer) {\r\n        const { qCount } = this.state;\r\n        var joined = this.state.givenAns.concat(answer);\r\n        this.setState({ givenAns: joined }); //to add ht e list of ques answered\r\n        if (given === answer) {\r\n            this.setState({\r\n                total: this.state.total + 1\r\n            });\r\n        }\r\n        if (qCount === 0) {\r\n            console.log(answer, qCount, \"qCount<1\");\r\n            this.setState({\r\n                qCount: qCount + 1\r\n            });\r\n        }\r\n        if (qCount === 2) {\r\n            console.log(answer, qCount, \"else\");\r\n            this.setState({\r\n                finished: true\r\n            });\r\n        }\r\n        console.log(\" qCount=====\", this.state.i);\r\n    }\r\n    render() {\r\n        const { qCount, ques, finished, total } = this.state;\r\n        var answered = true;\r\n\r\n        if (finished)\r\n            return (\r\n                <h1 className=\"text-center m-5 text-primary\">\r\n                    <button className=\"btn btn-success m-auto p-auto\">\r\n                        <Link to=\"/\">Retry</Link>\r\n                    </button>\r\n                    <br />\r\n                    Quiz is finished <br />\r\n                    Your answer being {total}\r\n                </h1>\r\n            );\r\n        return (\r\n            <div className=\"container my-5\">\r\n                <div className=\"col\">\r\n                    <div className=\"container\">\r\n                        <div className=\"text-black text-center\">\r\n                            {this.previusButton()}\r\n                            <h2 className=\"text-center m-3\">\r\n                                {ques[qCount].questionno}\r\n                            </h2>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {ques[qCount].options.map(value => {\r\n                                return (\r\n                                    <button\r\n                                        className=\"btn col btn-light m-1\"\r\n                                        key={value.key}\r\n                                        disabled={answered ? false : true}\r\n                                        onClick={() => {\r\n                                            this.click(\r\n                                                value.key,\r\n                                                ques[qCount].ansCorrect\r\n                                            );\r\n                                        }}\r\n                                    >\r\n                                        <p className=\"lead p-auto text-dark mt-2 text-center\">\r\n                                            <b>{value.ques}</b>\r\n                                        </p>\r\n                                    </button>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}