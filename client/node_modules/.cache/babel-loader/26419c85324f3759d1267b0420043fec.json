{"ast":null,"code":"var _jsxFileName = \"/media/chetan/New Volume1/Pdhai/Projects/kbc-quiz/src/views/Quiz.jsx\";\nimport React, { Component } from \"react\";\nimport questions from \"../data/questions\";\nimport { Link } from \"react-router-dom\"; // import PrevButton from \"../components/PreviousButton/PrevButton\";\n\nexport default class Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      qCount: 0,\n      ques: [...questions],\n      finished: false,\n      givenAns: [],\n      total: 0\n    };\n  }\n\n  previusButton() {\n    if (this.state.qCount === 0) {\n      return React.createElement(Link, {\n        className: \"btn col-2 btn-danger py-3\",\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Home\");\n    }\n\n    return React.createElement(\"button\", {\n      className: \"btn col-2 btn-danger py-3\",\n      onClick: e => {\n        e.preventDefault();\n        this.prev(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Prev\");\n  }\n\n  getClassName(value) {\n    const _this$state = this.state,\n          qCount = _this$state.qCount,\n          givenAns = _this$state.givenAns,\n          ques = _this$state.ques;\n\n    if (givenAns[qCount]) {\n      const correctanswer = ques[qCount].answerCorrect;\n      console.log(\"given answer\", givenAns[qCount], \"correct answer\", correctanswer, \"the answe ia m on\", value.key);\n\n      if (givenAns[qCount] === correctanswer === value.key) {\n        return React.createElement(\"button\", {\n          key: value.key,\n          className: \"btn col btn-primary disabled m-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"lead p-auto text-dark mt-2 text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, value.ques)));\n      }\n\n      return React.createElement(\"button\", {\n        key: value.key,\n        className: \"btn col btn-danger disabled m-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"lead p-auto text-dark mt-2 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, value.ques)));\n    }\n\n    return React.createElement(\"button\", {\n      key: value.key,\n      className: \"btn col btn-light m-1\",\n      onClick: () => {\n        this.click(value.key, ques[qCount].answerCorrect);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"lead p-auto text-dark mt-2 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, value.ques)));\n  }\n\n  prev() {\n    const _this$state2 = this.state,\n          qCount = _this$state2.qCount,\n          ques = _this$state2.ques,\n          givenAns = _this$state2.givenAns;\n\n    if (ques[qCount].answerCorrect && ques[qCount].answerCorrect === givenAns[qCount]) {\n      console.log(\"answered question  \", givenAns[qCount]);\n    }\n\n    if (qCount > 0) {\n      this.setState({\n        qCount: this.state.qCount - 1,\n        finished: false\n      });\n    }\n\n    if (qCount === 0) {\n      this.setState({\n        qCount: 0,\n        finished: true\n      });\n    }\n  }\n\n  click(quesKey, actualAns) {\n    //todo:the quesKey is given answer and actualAns is correct\n    const qCount = this.state.qCount;\n    var joined = this.state.givenAns.concat(quesKey);\n    this.setState({\n      givenAns: joined\n    }); //todo:to add ht e list of ques answered\n\n    if (quesKey === actualAns) {\n      this.setState({\n        total: this.state.total + 1\n      });\n    }\n\n    if (qCount === 0) {\n      console.log(\"answer :\", quesKey, \"qcount:\", qCount, \"qCount<1\");\n      this.setState({\n        qCount: qCount + 1\n      });\n    } else {\n      console.log(\"answer :\", quesKey, \"qcount:\", qCount, \"else\");\n      this.setState({\n        finished: true\n      });\n    }\n\n    console.log(\"joined:\", joined, \"  given ans:\", this.state.givenAns); //todo : adding the given answer to array of answers\n\n    console.log(\" qCount=====\", this.state.qCount);\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          qCount = _this$state3.qCount,\n          ques = _this$state3.ques,\n          finished = _this$state3.finished,\n          total = _this$state3.total;\n    if (finished) return React.createElement(\"div\", {\n      className: \"text-center m-5 text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        console.log(\"given ans:\", this.state.givenAns);\n      },\n      className: \"btn btn-success m-auto p-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Retry\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Quiz is finished \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), \"Your answer being \", total));\n    return React.createElement(\"div\", {\n      className: \"container my-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-black text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.previusButton(), React.createElement(\"h2\", {\n      className: \"text-center m-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, ques[qCount].questionno)), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, ques[qCount].options.map(value => {\n      return this.getClassName(value);\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/media/chetan/New Volume1/Pdhai/Projects/kbc-quiz/src/views/Quiz.jsx"],"names":["React","Component","questions","Link","Quiz","state","qCount","ques","finished","givenAns","total","previusButton","e","preventDefault","prev","getClassName","value","correctanswer","answerCorrect","console","log","key","click","setState","quesKey","actualAns","joined","concat","render","questionno","options","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport questions from \"../data/questions\";\r\nimport { Link } from \"react-router-dom\";\r\n// import PrevButton from \"../components/PreviousButton/PrevButton\";\r\n\r\nexport default class Quiz extends Component {\r\n    state = {\r\n        qCount: 0,\r\n        ques: [...questions],\r\n        finished: false,\r\n        givenAns: [],\r\n        total: 0\r\n    };\r\n    previusButton() {\r\n        if (this.state.qCount === 0) {\r\n            return (\r\n                <Link className=\"btn col-2 btn-danger py-3\" to=\"/\">\r\n                    Home\r\n                </Link>\r\n            );\r\n        }\r\n        return (\r\n            <button\r\n                className=\"btn col-2 btn-danger py-3\"\r\n                onClick={e => {\r\n                    e.preventDefault();\r\n                    this.prev(true);\r\n                }}\r\n            >\r\n                Prev\r\n            </button>\r\n        );\r\n    }\r\n    getClassName(value) {\r\n        const { qCount, givenAns, ques } = this.state;\r\n\r\n        if (givenAns[qCount]) {\r\n            const correctanswer = ques[qCount].answerCorrect;\r\n            console.log(\r\n                \"given answer\",\r\n                givenAns[qCount],\r\n                \"correct answer\",\r\n                correctanswer,\r\n                \"the answe ia m on\",\r\n                value.key\r\n            );\r\n            if ((givenAns[qCount] === correctanswer) === value.key) {\r\n                return (\r\n                    <button\r\n                        key={value.key}\r\n                        className=\"btn col btn-primary disabled m-1\"\r\n                    >\r\n                        <p className=\"lead p-auto text-dark mt-2 text-center\">\r\n                            <b>{value.ques}</b>\r\n                        </p>\r\n                    </button>\r\n                );\r\n            }\r\n            return (\r\n                <button\r\n                    key={value.key}\r\n                    className=\"btn col btn-danger disabled m-1\"\r\n                >\r\n                    <p className=\"lead p-auto text-dark mt-2 text-center\">\r\n                        <b>{value.ques}</b>\r\n                    </p>\r\n                </button>\r\n            );\r\n        }\r\n        return (\r\n            <button\r\n                key={value.key}\r\n                className=\"btn col btn-light m-1\"\r\n                onClick={() => {\r\n                    this.click(value.key, ques[qCount].answerCorrect);\r\n                }}\r\n            >\r\n                <p className=\"lead p-auto text-dark mt-2 text-center\">\r\n                    <b>{value.ques}</b>\r\n                </p>\r\n            </button>\r\n        );\r\n    }\r\n    prev() {\r\n        const { qCount, ques, givenAns } = this.state;\r\n        if (\r\n            ques[qCount].answerCorrect &&\r\n            ques[qCount].answerCorrect === givenAns[qCount]\r\n        ) {\r\n            console.log(\"answered question  \", givenAns[qCount]);\r\n        }\r\n        if (qCount > 0) {\r\n            this.setState({\r\n                qCount: this.state.qCount - 1,\r\n                finished: false\r\n            });\r\n        }\r\n        if (qCount === 0) {\r\n            this.setState({\r\n                qCount: 0,\r\n                finished: true\r\n            });\r\n        }\r\n    }\r\n    click(quesKey, actualAns) {\r\n        //todo:the quesKey is given answer and actualAns is correct\r\n        const { qCount } = this.state;\r\n        var joined = this.state.givenAns.concat(quesKey);\r\n        this.setState({ givenAns: joined }); //todo:to add ht e list of ques answered\r\n        if (quesKey === actualAns) {\r\n            this.setState({\r\n                total: this.state.total + 1\r\n            });\r\n        }\r\n        if (qCount === 0) {\r\n            console.log(\"answer :\", quesKey, \"qcount:\", qCount, \"qCount<1\");\r\n            this.setState({\r\n                qCount: qCount + 1\r\n            });\r\n        } else {\r\n            console.log(\"answer :\", quesKey, \"qcount:\", qCount, \"else\");\r\n            this.setState({\r\n                finished: true\r\n            });\r\n        }\r\n        console.log(\"joined:\", joined, \"  given ans:\", this.state.givenAns); //todo : adding the given answer to array of answers\r\n        console.log(\" qCount=====\", this.state.qCount);\r\n    }\r\n    render() {\r\n        const { qCount, ques, finished, total } = this.state;\r\n        if (finished)\r\n            return (\r\n                <div className=\"text-center m-5 text-primary\">\r\n                    <button\r\n                        onClick={() => {\r\n                            console.log(\"given ans:\", this.state.givenAns);\r\n                        }}\r\n                        className=\"btn btn-success m-auto p-auto\"\r\n                    >\r\n                        <Link to=\"/\">Retry</Link>\r\n                    </button>\r\n                    <br />\r\n                    <h1>\r\n                        Quiz is finished <br />\r\n                        Your answer being {total}\r\n                    </h1>\r\n                </div>\r\n            );\r\n        return (\r\n            <div className=\"container my-5\">\r\n                <div className=\"col\">\r\n                    <div className=\"container\">\r\n                        <div className=\"text-black text-center\">\r\n                            {this.previusButton()}\r\n                            <h2 className=\"text-center m-3\">\r\n                                {ques[qCount].questionno}\r\n                            </h2>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {ques[qCount].options.map(value => {\r\n                                return this.getClassName(value);\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}